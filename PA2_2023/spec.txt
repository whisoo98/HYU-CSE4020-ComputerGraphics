프로그래밍 과제 #2 (소 롤러 코스터)

발표: 2023년 5월 29일 월요일
마감: 2023년 6월 17일 수요일 (오후 24시)
목표: 스플라인 곡선을 생성하는 방법 이해하기.
개발 환경: 필요한 패키지(python3, pil, glfw, numpy)를 설치한 후, 어떤 운영 체제에서도 사용할 수 있습니다.

요구 사항:
1) 스켈레톤 코드에서 시작하기.
    a. 코드는 "cow.obj"를 읽어야 합니다. 이 파일은 작업 디렉토리에 있어야 합니다.
    b. "cow.obj"에는 삼각형 메시가 포함되어 있습니다.

2) 스켈레톤 코드의 기본 구조 이해하기.
    a. '스페이스' 키를 눌러 시점을 변경해 보세요.
    b. 어떤 부분의 소스 코드를 변경해야 하는지 이해해 보세요. "TODO"라는 키워드로 검색하세요.

3) 강의 비디오와 가능한 정확히 동일한 데모 비디오를 재현해 보세요 (색상 테마는 제외).
    - 우선 소를 좌클릭하여 선택하세요. 그런 다음, 소의 경로를 따라 가는 6개의 제어점을 클릭하세요.
    - 제어점을 지정할 때마다 소가 클릭한 위치에 복제됩니다. 높이를 조정하기 위해 L-드래그를 사용할 수 있습니다. 
    - 모든 제어점을 제공한 후, 소는 첫 번째 제어점에서 마지막 제어점까지 연결된 롤러 코스터 트랙을 따라 움직이기 시작합니다. 
    - 소는 트랙을 세 바퀴 돌고 애니메이션을 완료한 후에는 커서를 따라 움직이는 초기 모드로 돌아갑니다.

4) glfw.get_time() 함수가 유용할 것입니다.

제출 안내:
1) 솔루션의 소스 코드 (만든/변경한 파일을 지정하는 README.txt 포함)
2) 만점을 받으려면,
    a) 제어점 지정을 위한 UI 구현: 5점
    b) 수직 드래그 (L-드래그) 및 수평 위치 지정 (마우스 이동) 구현: 5점
    c) 근사 스플라인인 순환 B-스플라인 곡선 사용: 10점
    d) 소는 앞으로 향해야 합니다 (yaw orientation) : 5점
    e) 소는 올라갈 때 위로 향해야 합니다 (피치 방향). : 5점
        - 회전 각도나 행렬을 계산하는 다양한 방법이 있습니다. 예를 들어, math.atan2 함수를 사용할 수 있으며, 외적 연산의 연속적인 사용도 가능합니다.
